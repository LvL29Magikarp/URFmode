local Hecarim_Ver = "0.001"

if myHero.charName ~= "Hecarim" then return end

-- These variables need to be near the top of your script so you can call them in your callbacks.
HWID = Base64Encode(tostring(os.getenv("PROCESSOR_IDENTIFIER")..os.getenv("USERNAME")..os.getenv("COMPUTERNAME")..os.getenv("PROCESSOR_LEVEL")..os.getenv("PROCESSOR_REVISION")))
-- DO NOT CHANGE. This is set to your proper ID.
id = 237

-- CHANGE ME. Make this the exact same name as the script you added into the site!
ScriptName = "URFHecarim"

-- Thank you to Roach and Bilbao for the support!
assert(load(Base64Decode("G0x1YVIAAQQEBAgAGZMNChoKAAAAAAAAAAAAAQIDAAAAJQAAAAgAAIAfAIAAAQAAAAQKAAAAVXBkYXRlV2ViAAEAAAACAAAADAAAAAQAETUAAAAGAUAAQUEAAB2BAAFGgUAAh8FAAp0BgABdgQAAjAHBAgFCAQBBggEAnUEAAhsAAAAXwAOAjMHBAgECAgBAAgABgUICAMACgAEBgwIARsNCAEcDwwaAA4AAwUMDAAGEAwBdgwACgcMDABaCAwSdQYABF4ADgIzBwQIBAgQAQAIAAYFCAgDAAoABAYMCAEbDQgBHA8MGgAOAAMFDAwABhAMAXYMAAoHDAwAWggMEnUGAAYwBxQIBQgUAnQGBAQgAgokIwAGJCICBiIyBxQKdQQABHwCAABcAAAAECAAAAHJlcXVpcmUABAcAAABzb2NrZXQABAcAAABhc3NlcnQABAQAAAB0Y3AABAgAAABjb25uZWN0AAQQAAAAYm9sLXRyYWNrZXIuY29tAAMAAAAAAABUQAQFAAAAc2VuZAAEGAAAAEdFVCAvcmVzdC9uZXdwbGF5ZXI/aWQ9AAQHAAAAJmh3aWQ9AAQNAAAAJnNjcmlwdE5hbWU9AAQHAAAAc3RyaW5nAAQFAAAAZ3N1YgAEDQAAAFteMC05QS1aYS16XQAEAQAAAAAEJQAAACBIVFRQLzEuMA0KSG9zdDogYm9sLXRyYWNrZXIuY29tDQoNCgAEGwAAAEdFVCAvcmVzdC9kZWxldGVwbGF5ZXI/aWQ9AAQCAAAAcwAEBwAAAHN0YXR1cwAECAAAAHBhcnRpYWwABAgAAAByZWNlaXZlAAQDAAAAKmEABAYAAABjbG9zZQAAAAAAAQAAAAAAEAAAAEBvYmZ1c2NhdGVkLmx1YQA1AAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAMAAAADAAAAAwAAAAMAAAAEAAAABAAAAAUAAAAFAAAABQAAAAYAAAAGAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAgAAAAHAAAABQAAAAgAAAAJAAAACQAAAAkAAAAKAAAACgAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAAMAAAACwAAAAkAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAGAAAAAgAAAGEAAAAAADUAAAACAAAAYgAAAAAANQAAAAIAAABjAAAAAAA1AAAAAgAAAGQAAAAAADUAAAADAAAAX2EAAwAAADUAAAADAAAAYWEABwAAADUAAAABAAAABQAAAF9FTlYAAQAAAAEAEAAAAEBvYmZ1c2NhdGVkLmx1YQADAAAADAAAAAIAAAAMAAAAAAAAAAEAAAAFAAAAX0VOVgA="), nil, "bt", _ENV))()

local REQUIRED_LIBS = {
["SOW"] = "https://raw.githubusercontent.com/honda7/BoL/master/Common/SOW.lua",
["VPrediction"] = "https://raw.githubusercontent.com/honda7/BoL/master/Common/VPrediction.lua"
}

local DOWNLOADING_LIBS, DOWNLOAD_COUNT = false, 0

function AfterDownload()
	DOWNLOAD_COUNT = DOWNLOAD_COUNT - 1
	if DOWNLOAD_COUNT == 0 then
		DOWNLOADING_LIBS = false
		print("<font color=\"#FF0000\"><b>URF Hecarim:</b></font> <font color=\"#FFFFFF\">Required libraries downloaded successfully, please reload (double F9).</font>")
	end
end

_G.Hecarim_Autoupdate = true

for DOWNLOAD_LIB_NAME, DOWNLOAD_LIB_URL in pairs(REQUIRED_LIBS) do
	if FileExist(LIB_PATH .. DOWNLOAD_LIB_NAME .. ".lua") then
		require(DOWNLOAD_LIB_NAME)
	else
		DOWNLOADING_LIBS = true
		DOWNLOAD_COUNT = DOWNLOAD_COUNT + 1
		DownloadFile(DOWNLOAD_LIB_URL, LIB_PATH .. DOWNLOAD_LIB_NAME..".lua", AfterDownload)
	end
end

if DOWNLOADING_LIBS then return end

local UPDATE_NAME = "URFHecarim"
local UPDATE_HOST = "raw.github.com"
local UPDATE_PATH = "/LvL29Magikarp/URFmode/master/URFHecarim".."?rand="..math.random(1,10000)
local UPDATE_FILE_PATH = SCRIPT_PATH..UPDATE_NAME..".lua"
local UPDATE_URL = "https://"..UPDATE_HOST..UPDATE_PATH

function AutoupdaterMsg(msg) print("<font color=\"#FF0000\">"..UPDATE_NAME..":</font> <font color=\"#FFFFFF\">"..msg..".</font>") end
if _G.Vlad_Autoupdate then
	local ServerData = GetWebResult(UPDATE_HOST, UPDATE_PATH)
	if ServerData then
		local ServerVersion = string.match(ServerData, "local Vlad_Ver = \"%d+.%d+\"")
		ServerVersion = string.match(ServerVersion and ServerVersion or "", "%d+.%d+")
		if ServerVersion then
			ServerVersion = tonumber(ServerVersion)
			if tonumber(Vlad_Ver) < ServerVersion then
				AutoupdaterMsg("New version available"..ServerVersion)
				AutoupdaterMsg("Updating, please don't press F9")
				DownloadFile(UPDATE_URL, UPDATE_FILE_PATH, function () AutoupdaterMsg("Successfully updated. ("..Vlad_Ver.." => "..ServerVersion.."), press F9 twice to load the updated version.") end)	 
			else
				AutoupdaterMsg("You have got the latest version ("..ServerVersion..")")
			end
		end
	else
		AutoupdaterMsg("Error downloading version info")
	end
end


--[[ END AUTOUPDATE --]]


function OnLoad()
	URFMENU()
	VP = VPrediction()
	Orbwalker = SOW(VP)
		URFMENU:addSubMenu("Orbwalking Settings", "Orbwalking")
		Orbwalker:LoadToMenu(URFMENU.Orbwalking)
	lastSkin = 0
	UpdateWeb(true, ScriptName, id, HWID)
end

function OnTick()
	SPAMQ1()
	SPAMW1()
	SPAME1()
	if VIP_USER and URFMENU.Others.skin 
	then skin() end
end


function URFMENU()
	URFMENU = scriptConfig("URF Hecarim", "Hecarim")
	
	URFMENU:addSubMenu("Spam Q", "SPAM1")
		URFMENU.SPAM1:addParam("SPAMQ1", "Spam (Q) Toggle", SCRIPT_PARAM_ONOFF, true)
		URFMENU.SPAM1:addParam("SPAMQ2", "Spam (Q) On Key Down", SCRIPT_PARAM_ONKEYDOWN, false, 32)
	URFMENU:addSubMenu("Spam W", "SPAM2")
		URFMENU.SPAM2:addParam("SPAMW1", "Spam (W) Toggle", SCRIPT_PARAM_ONOFF, true)
		URFMENU.SPAM2:addParam("SPAMW2", "Spam (W) On Key Down", SCRIPT_PARAM_ONKEYDOWN, false, 32)
	URFMENU:addSubMenu("Spam E", "SPAM3")
		URFMENU.SPAM3:addParam("SPAME1", "Spam (E) Toggle", SCRIPT_PARAM_ONOFF, true)
		URFMENU.SPAM3:addParam("SPAME2", "Spam (E) On Key Down", SCRIPT_PARAM_ONKEYDOWN, false, 32)
	URFMENU:addSubMenu("Others", "Others")
		URFMENU.Others:addParam("Info", "Your Skin", SCRIPT_PARAM_INFO, "")
		URFMENU.Others:addParam("skin", "Skin   ------------------------>", SCRIPT_PARAM_LIST, 5, { "Blood Knight", "Reaper", "Headless", "Arcade  Take me ", "Classic" })
		URFMENU.Others:addParam("packets", "Use Packet (VIP)", SCRIPT_PARAM_ONOFF, false)
	URFMENU:addSubMenu("Draw", "Draw")
		URFMENU.Draw:addParam("Q", "Draw (Q)", SCRIPT_PARAM_ONOFF, true)
		URFMENU.Draw:addParam("W", "Draw (W)", SCRIPT_PARAM_ONOFF, true)
		URFMENU.Draw:addParam("R", "Draw (R)", SCRIPT_PARAM_ONOFF, true)
end

function SPAMQ1()
	if URFMENU.SPAM1.SPAMQ1 then
		if (myHero:CanUseSpell(_Q) == READY) then
		 if VIP_USER and URFMENU.Others.packets then Packet("S_CAST", {spellId = _Q}):send() end
		CastSpell(_Q)
		end
	end
	 if URFMENU.SPAM1.SPAMQ2 then
		if (myHero:CanUseSpell(_Q) == READY) then
		 if VIP_USER and URFMENU.Others.packets then Packet("S_CAST", {spellId = _Q}):send() end
		CastSpell(_Q)
		end
	end
	
end

function SPAMW1()
	if URFMENU.SPAM2.SPAMW1 then
		if (myHero:CanUseSpell(_W) == READY) then
		 if VIP_USER and URFMENU.Others.packets then Packet("S_CAST", {spellId = _W}):send() end
		CastSpell(_W)
		end
	end
	 if URFMENU.SPAM2.SPAMW2 then
		if (myHero:CanUseSpell(_W) == READY) then
		 if VIP_USER and URFMENU.Others.packets then Packet("S_CAST", {spellId = _W}):send() end
		CastSpell(_W)
		end
	end
	
end

function SPAME1()
	if URFMENU.SPAM3.SPAME1 then
		if (myHero:CanUseSpell(_E) == READY) then
		 if VIP_USER and URFMENU.Others.packets then Packet("S_CAST", {spellId = _E}):send() end
		CastSpell(_E)
		end
	end
	 if URFMENU.SPAM3.SPAME2 then
		if (myHero:CanUseSpell(_E) == READY) then
		 if VIP_USER and URFMENU.Others.packets then Packet("S_CAST", {spellId = _E}):send() end
		CastSpell(_E)
		end
	end
end


-- shalzuth
function GenModelPacket(champ, skinId)
	p = CLoLPacket(0x97)
	p:EncodeF(myHero.networkID)
	p.pos = 1
	t1 = p:Decode1()
	t2 = p:Decode1()
	t3 = p:Decode1()
	t4 = p:Decode1()
	p:Encode1(t1)
	p:Encode1(t2)
	p:Encode1(t3)
	p:Encode1(bit32.band(t4,0xB))
	p:Encode1(1)--hardcode 1 bitfield
	p:Encode4(skinId)
	for i = 1, #champ do
		p:Encode1(string.byte(champ:sub(i,i)))
	end
	for i = #champ + 1, 64 do
		p:Encode1(0)
	end
	p:Hide()
	RecvPacket(p)
end

function skin()
	if URFMENU.Others.skin ~= lastSkin then
		lastSkin = URFMENU.Others.skin
		GenModelPacket("Hecarim", URFMENU.Others.skin)
	end
end

function OnDraw()
	if URFMENU.Draw.Q then
		DrawCircle(myHero.x, myHero.y, myHero.z, 350, 0xFFFF00FF)
	end
	if URFMENU.Draw.W then
		DrawCircle(myHero.x, myHero.y, myHero.z, 525, 0xFFFF00FF)
	end
	if URFMENU.Draw.R then
		DrawCircle(myHero.x, myHero.y, myHero.z, 1000, 0xFFFF00FF)
	end
end

function OnBugsplat()
	UpdateWeb(false, ScriptName, id, HWID)
end

function OnUnload()
	UpdateWeb(false, ScriptName, id, HWID)
end

-- Here is one I added to my OnTick to detect the end of the game
if GetGame().isOver then
	UpdateWeb(false, ScriptName, id, HWID)
	-- This is a var where I stop executing what is in my OnTick()
	startUp = false;
end
	
